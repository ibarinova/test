<?xml version="1.0" encoding="UTF-8"?><!--
This file is part of the DITA Open Toolkit project.

Copyright 2015 Jarno Elovirta

See the accompanying LICENSE file for applicable license.
--><project xmlns:dita="http://dita-ot.sourceforge.net" name="dita2unitypost">
  <target name="dita2unitypost" depends="unitypost.init, build-init, preprocess, post.topic, post.map, unitypost.metadata"/>
 <target name="unitypost.init">
   <condition property="preprocess.chunk.skip">
    <equals arg1="${transtype}" arg2="post" casesensitive="true"/>
  </condition>
    <condition property="args.xsl" value="${dita.plugin.org.dell.unitypost.dir}/xsl/dita2unitypost.xsl">
      <not>
        <isset property="args.xsl"/>
      </not>
    </condition>
    <condition property="post.nav-toc" value="${nav-toc}" else="none">
      <isset property="nav-toc"/>
    </condition>
    <dita-ot-fail id="DOTA007E">
      <condition>
        <and>
          <isset property="args.ftr"/>
          <not>
            <available file="${args.ftr}" type="file"/>
          </not>
        </and>
      </condition>
      <param name="1" value="${args.ftr}"/>
    </dita-ot-fail>
    <dita-ot-fail id="DOTA008E">
      <condition>
        <and>
          <isset property="args.hdr"/>
          <not>
            <available file="${args.hdr}" type="file"/>
          </not>
        </and>
      </condition>
      <param name="1" value="${args.hdr}"/>
    </dita-ot-fail>
    <dita-ot-fail id="DOTA009E">
      <condition>
        <and>
          <isset property="args.hdf"/>
          <not>
            <available file="${args.hdf}" type="file"/>
          </not>
        </and>
      </condition>
      <param name="1" value="${args.hdf}"/>
    </dita-ot-fail>
    <!-- begin to check and init css relevant properties -->
    <condition property="user.csspath.url">
      <or>
        <contains string="${args.csspath}" substring="http://"/>
        <contains string="${args.csspath}" substring="https://"/>
      </or>
    </condition>
    <condition property="args.csspath.absolute">
      <isabsolute path="${args.csspath}"/>
    </condition>
    <!-- Set the csspath as default empty directory when there is no user
      input csspath or user input csspath is a local absolute path. -->
    <condition property="user.csspath" value="">
      <or>
        <not>
          <isset property="args.csspath"/>
        </not>
        <isset property="args.csspath.absolute"/>
      </or>
    </condition>
    <condition property="user.csspath" value="${args.csspath}/">
      <not>
        <isset property="user.csspath"/>
      </not>
    </condition>
    <condition property="args.css.real" value="${args.cssroot}${file.separator}${args.css}">
      <isset property="args.cssroot"/>
    </condition>
    <condition property="args.css.real" value="${args.css}">
      <not>
        <isset property="args.cssroot"/>
      </not>
    </condition>
    <available file="${args.css.real}" property="args.css.present" type="file"/>
    <basename property="args.css.file.temp" file="${args.css}"/>
    <condition property="args.css.file" value="${args.css.file.temp}">
      <or>
        <isset property="args.css.present"/>
        <isset property="user.csspath.url"/>
      </or>
    </condition>
    <!-- end to check and init css relevant parameters -->
    <condition property="out.ext" value=".html">
      <not>
        <isset property="args.outext"/>
      </not>
    </condition>
    <!-- Set to "true" if you get out-of-memory errors during preprocess
    while processing very large (thousands of files) document sets. -->
    <condition property="dita.post.reloadstylesheet" value="false">
      <not>
        <isset property="dita.post.reloadstylesheet"/>
      </not>
    </condition>
  </target>

 
<target name="unitypost.metadata">
      <loadfile property="ditamapfileList" srcFile="${dita.temp.dir}${file.separator}${fullditamapfile}"/>
		<xslt processor="trax" basedir="${dita.temp.dir}" destdir="${output.dir}" in="${dita.temp.dir}/.job.xml" out="${output.dir}${file.separator}_meta${file.separator}metadata.xml" style="${dita.plugin.org.dita.post.dir}${file.separator}xsl${file.separator}metadata.xsl">
			<param name="ditamap" expression="${dita.temp.dir}${file.separator}${dita.map.filename.root}.ditamap"/>
			<param name="OUTEXT" expression="${out.ext}" if="out.ext"/>
            <param name="job" expression="${user.input.dir}${file.separator}ishjobticket.xml"/>
			<param name="inputdir" expression="${user.input.dir}"/>
            <param name="TEMPDIR" expression="${dita.temp.dir}"/>
            <param name="MAPLIST" expression="${ditamapfileList}"/>
			<param name="ishjob" expression="${dita.temp.dir}${file.separator}.job.xml"/>
			<xmlcatalog refid="dita.catalog"/>
		</xslt>
    </target>
</project>